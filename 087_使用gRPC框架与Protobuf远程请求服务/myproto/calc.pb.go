// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calc.proto

package myproto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//传入的参数：结构体成员Nums对应Go语言的[]float64类型
type In struct {
	Nums                 []float64 `protobuf:"fixed64,1,rep,packed,name=Nums,proto3" json:"Nums,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *In) Reset()         { *m = In{} }
func (m *In) String() string { return proto.CompactTextString(m) }
func (*In) ProtoMessage()    {}
func (*In) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b9900dc883ea68, []int{0}
}

func (m *In) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_In.Unmarshal(m, b)
}
func (m *In) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_In.Marshal(b, m, deterministic)
}
func (m *In) XXX_Merge(src proto.Message) {
	xxx_messageInfo_In.Merge(m, src)
}
func (m *In) XXX_Size() int {
	return xxx_messageInfo_In.Size(m)
}
func (m *In) XXX_DiscardUnknown() {
	xxx_messageInfo_In.DiscardUnknown(m)
}

var xxx_messageInfo_In proto.InternalMessageInfo

func (m *In) GetNums() []float64 {
	if m != nil {
		return m.Nums
	}
	return nil
}

//返回的参数：结构体成员Result对应Go语言的float64类型
type Out struct {
	Result               float64  `protobuf:"fixed64,1,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Out) Reset()         { *m = Out{} }
func (m *Out) String() string { return proto.CompactTextString(m) }
func (*Out) ProtoMessage()    {}
func (*Out) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b9900dc883ea68, []int{1}
}

func (m *Out) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Out.Unmarshal(m, b)
}
func (m *Out) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Out.Marshal(b, m, deterministic)
}
func (m *Out) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Out.Merge(m, src)
}
func (m *Out) XXX_Size() int {
	return xxx_messageInfo_Out.Size(m)
}
func (m *Out) XXX_DiscardUnknown() {
	xxx_messageInfo_Out.DiscardUnknown(m)
}

var xxx_messageInfo_Out proto.InternalMessageInfo

func (m *Out) GetResult() float64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*In)(nil), "myproto.In")
	proto.RegisterType((*Out)(nil), "myproto.Out")
}

func init() { proto.RegisterFile("calc.proto", fileDescriptor_a2b9900dc883ea68) }

var fileDescriptor_a2b9900dc883ea68 = []byte{
	// 125 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x4e, 0xcc, 0x49,
	0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xcf, 0xad, 0x04, 0x33, 0x94, 0x24, 0xb8, 0x98,
	0x3c, 0xf3, 0x84, 0x84, 0xb8, 0x58, 0xfc, 0x4a, 0x73, 0x8b, 0x25, 0x18, 0x15, 0x98, 0x35, 0x18,
	0x83, 0xc0, 0x6c, 0x25, 0x59, 0x2e, 0x66, 0xff, 0xd2, 0x12, 0x21, 0x31, 0x2e, 0xb6, 0xa0, 0xd4,
	0xe2, 0xd2, 0x9c, 0x12, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xc6, 0x20, 0x28, 0xcf, 0x48, 0x83, 0x8b,
	0xc5, 0x39, 0x31, 0x27, 0x59, 0x48, 0x81, 0x8b, 0xd9, 0x31, 0x25, 0x45, 0x88, 0x5b, 0x0f, 0x6a,
	0xa2, 0x9e, 0x67, 0x9e, 0x14, 0x0f, 0x9c, 0xe3, 0x5f, 0x5a, 0x92, 0xc4, 0x06, 0x66, 0x1a, 0x03,
	0x02, 0x00, 0x00, 0xff, 0xff, 0xf7, 0x4f, 0xa9, 0x0d, 0x80, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalcClient is the client API for Calc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalcClient interface {
	//服务的接口方法
	Add(ctx context.Context, in *In, opts ...grpc.CallOption) (*Out, error)
}

type calcClient struct {
	cc *grpc.ClientConn
}

func NewCalcClient(cc *grpc.ClientConn) CalcClient {
	return &calcClient{cc}
}

func (c *calcClient) Add(ctx context.Context, in *In, opts ...grpc.CallOption) (*Out, error) {
	out := new(Out)
	err := c.cc.Invoke(ctx, "/myproto.Calc/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalcServer is the server API for Calc service.
type CalcServer interface {
	//服务的接口方法
	Add(context.Context, *In) (*Out, error)
}

// UnimplementedCalcServer can be embedded to have forward compatible implementations.
type UnimplementedCalcServer struct {
}

func (*UnimplementedCalcServer) Add(ctx context.Context, req *In) (*Out, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}

func RegisterCalcServer(s *grpc.Server, srv CalcServer) {
	s.RegisterService(&_Calc_serviceDesc, srv)
}

func _Calc_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(In)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalcServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/myproto.Calc/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalcServer).Add(ctx, req.(*In))
	}
	return interceptor(ctx, in, info, handler)
}

var _Calc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "myproto.Calc",
	HandlerType: (*CalcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Calc_Add_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calc.proto",
}
